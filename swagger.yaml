openapi: 3.0.0
info:
  title: GALA-A19-Server
  description: BDSM (Base De Donn√©e sans Molosse)
  version: 1.0.0
servers:
  - url: http://127.0.0.1/
    description: Local server


paths:
  /buy/{user_UID}:
    post:
      summary: Validate a shopping-cart
      parameters:
        - in: path
          name: user_UID
          schema:
            type: string
          required: true
          description: UID of the user
      requestBody:
        description: Arguments to buy a product
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                counter_id:
                  type: integer
                  description: ID of the counter
                computer_MAC:
                  type: string
                  description: MAC adress of the computer
                shopping_cart:
                  type: array
                  items:
                    type: object
                    properties:
                      product_code:
                        type: string
                        description: Code corresponding to the product
                      quantity:
                        type: integer
                        description: Quantity of the product bought
                    required:
                      - product_code
                      - quantity
                  minItems: 1
              required:
                - counter_id
                - computer_MAC
                - shopping_cart           
      responses:
        '200':
          description: Transaction done
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_UID:
                    type: string
                    description: UID of the user
                  user_balance:
                    type: number
                    description: Money left of the user
                required:
                  - user_UID
                  - user_balance
        '401':
          description: You don't have enough money
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_UID:
                    type: string
                    description: Card UID of the user
                  user_balance:
                    type: integer
                    description: Money left of the user
                required:
                  - user_UID
                  - user_balance
        '404':
          description: User not found
          content:
            text/plain:
              schema:
                type: string
  /refilling/{user_UID}:
    post:
      summary: Credit a account or create an account
      parameters:
        - in: path
          name: user_UID
          schema:
            type: string
          required: true
          description: UID of the user
      requestBody:
        description: Arguments to create or credit a user
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                counter_id:
                  type: integer
                  description: ID of the counter
                computer_MAC:
                  type: string
                  description: MAC adress of the computer
                amount:
                  type: number
                  description: The amount you want to credit
              required:
                - counter_id
                - computer_MAC
                - amount
      responses:
        '200':
          description: Creditation done
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_UID:
                    type: string
                    description: Card UID of the user
                  user_balance:
                    type: number
                    description: Amount you credited
                required:
                  - user_UID
                  - user_balance
  /get_general_history/{history_size}:
    post:
      summary: Get the general history
      parameters:
        - in: path
          name: history_size
          schema:
            type: integer
          required: true
          description: Number of element you want to get
      responses:
        '200':
          description: General history send
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_UID:
                      type: string
                      description: Card UID of the user
                    counter_id:
                      type: integer
                      description: ID of the counter
                    computer_MAC:
                      type: string
                      description: MAC adress of the computer
                    amount:
                      type: number
                      description: amount when you refill your card
                    time:
                      type: string
                      format: date-time
                      description: datetime of the transaction
                    shopping_cart:
                      type: array
                      items:
                        type: object
                        properties:
                          product_code:
                            type: string
                            description: Code corresponding to the product
                          quantity:
                            type: integer
                            description: Quantity of the product bought
                        required:
                          - product_code
                          - quantity
                      minItems: 1                  
                  required:
                      - user_UID
                      - counter_id
                      - computer_MAC
                  minItems: 1
  /get_user_history/{user_UID}/{history_size}:
    post:
      summary: Get the specifier user history
      parameters:
        - in: path
          name: history_size
          schema:
            type: integer
          required: true
          description: Number of element you want to get
        - in: path
          name: user_UID
          schema:
            type: string
          required: true
          description: UID of the user
      responses:
        '200':
          description: User history send
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_UID:
                      type: string
                      description: Card UID of the user
                    counter_id:
                      type: integer
                      description: ID of the counter
                    computer_MAC:
                      type: string
                      description: MAC adress of the computer
                    time:
                      type: string
                      format: date-time
                      description: datetime of the transaction
                    shopping_cart:
                      type: array
                      items:
                        type: object
                        properties:
                          product_code:
                            type: string
                            description: Code corresponding to the product
                          quantity:
                            type: integer
                            description: Quantity of the product bought
                        required:
                          - product_code
                          - quantity
                      minItems: 1                  
                  required:
                      - user_UID
                      - counter_id
                      - computer_MAC
                      - shopping_cart
                minItems: 1
  /get_counter_history/{counter_id}/{history_size}:
    post:
      summary: Get the specifier counter history
      parameters:
        - in: path
          name: history_size
          schema:
            type: integer
          required: true
          description: Number of element you want to get
        - in: path
          name: counter_id
          schema:
            type: integer
          required: true
          description: ID of the counter
      responses:
        '200':
          description: Counter history send
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_UID:
                      type: string
                      description: Card UID of the user
                    counter_id:
                      type: integer
                      description: ID of the counter
                    computer_MAC:
                      type: string
                      description: MAC adress of the computer
                    time:
                      type: string
                      format: date-time
                      description: datetime of the transaction
                    shopping_cart:
                      type: array
                      items:
                        type: object
                        properties:
                          product_code:
                            type: string
                            description: Code corresponding to the product
                          quantity:
                            type: integer
                            description: Quantity of the product bought
                        required:
                          - product_code
                          - quantity
                      minItems: 1                  
                  required:
                      - user_UID
                      - counter_id
                      - computer_MAC
                      - shopping_cart
                  minItems: 1
  /undo_transaction/{transaction_id}:
    post:
      summary: Undo a transaction
      parameters:
        - in: path
          name: transaction_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the transaction
      responses:
        '200':
          description: Transaction undone
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_UID:
                    type: string
                    description: UID of the user
                  user_balance:
                    type: number
                    description: Money left of the user
                required:
                  - user_UID
                  - user_balance
        '404':
          description: Transaction not found
          content:
            text/plain:
              schema:
                type: string
  /get_counter_products/{counter_id}:
    post: 
      summary: get all products link to the counter
      parameters:
        - in: path
          name: counter_id
          schema: 
            type: integer
          required: true
          description: Numeric ID of the counter
      responses:
        '404':
          description: Counter not found
          content:
            text/plain:
              schema:
                type: string
        '200':
          description: Articles send
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                      description: Code of the product
                    name:
                      type: string
                      description: Name of the product
                    price:
                      type: number
                      description: Default price of the product
                    happy_hours:
                      type: array
                      items:
                        type: object
                        properties: 
                          start:
                            type: string
                            format: date-time
                            description: start of the happy hour
                          end:
                            type: string
                            format: date-time
                            description: end of the happy hour
                          price:
                            type: number
                            description: price during the happy hour
                        required:
                          - starting_hour
                          - ending_hour
                          - price
                    categorie:
                      type: string
                      description: categorie of the product
                    sub_categorie:
                      type: string
                      description: sub_categorie of the product
                  required:
                    - code
                    - name
                    - price
                    - categorie
                    - sub_categorie
                minItems: 1
  /transfer_money:
    post:
      summary: Transfer money from a user to another
      requestBody:
        description: Arguments to transfer money from user2 to user1
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user1_UID:
                  type: string
                  description: UID of the user who will receive the money
                user2_UID:
                  type: string
                  description: UID of the user who will give money
                amount:
                  type: number
                  description: Amount of money you want to transfer
              required:
                - user1_UID
                - user2_UID
                - amount
      responses:
        '404':
          description: User not found
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: You don't have enough money
          content:
            application/json:
              schema: 
                type: object
                properties:
                  user_UID:
                    type: string
                    description: User who don't have enough money
                  user_balance:
                    type: number
                    description: money left of the user
                required:
                  - user_UID
                  - user_balance
        '200':
          description: Transfer done
          content:
            application/json:
              schema:
                type: object
                properties:
                  user1_UID:
                    type: string
                    description: User who get the money
                  user1_balance:
                    type: number
                    description: New amount of money of the user1
                  user2_UID:
                    type: string
                    description: User who get the money
                  user2_balance:
                    type: number
                    description: New amount of money of the user2
                required:
                  - user1_UID
                  - user1_balance
                  - user2_UID
                  - user2_balance
  